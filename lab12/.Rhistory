install.packages(c("cli", "clipr", "colorspace", "crayon", "evaluate", "jsonlite", "tidyselect", "tinytex", "yaml"))
install.packages(c("cli", "clipr", "colorspace", "crayon", "evaluate", "jsonlite", "tidyselect", "tinytex", "yaml"))
install.packages(c("cli", "clipr", "colorspace", "crayon", "evaluate", "jsonlite", "tidyselect", "tinytex", "yaml"))
knitr::opts_chunk$set(
collapse = TRUE,
comment = "#>"
)
names <- list.files(path = "data/spiders", pattern = ".csv")
names
names_list <- strsplit(names, split = " .csv")
names_list
names_vec <- unlist(names_list)
names_vec
install.packages("yaml")
spider_list[[1]]
names(spider_list[[1]])
names(spider_list) <- names_vec
names(spider_list)
spider_list[[1]]
names(spider_list[[1]])
spider_list$Butte
names(spider_list[["Butte"]])
spiders_all <- bind_rows(spider_list)
spiders_all <- bind_rows(spider_list)
install.packages(c("cli", "clipr", "colorspace", "crayon", "evaluate", "jsonlite", "tidyselect", "tinytex"))
install.packages(c("cli", "clipr", "colorspace", "crayon", "evaluate", "jsonlite", "tidyselect", "tinytex"))
knitr::opts_chunk$set(
collapse = TRUE,
comment = "#>"
)
spiders_all <- bind_rows(spider_list)
spiders_all <- bind_rows(spider_list)
library(tidyverse)
library(here)
library(janitor)
library(lubridate)
spiders_all <- bind_rows(spider_list)
spiders_all
table_A <- read_csv(here("lab12", "data", "table_A.csv"))
table_B <- read_csv(here("lab12", "data", "table_B.csv"))
names(table_A)
names(table_B)
join_type(firstTable, secondTable, by=columnTojoinOn)
names(table_A)
table_A
names(table_B)
table_B
join_type(firstTable, secondTable, by=columnTojoinOn)
join_type(table_A, table_B, by=columnTojoinOn)
inner_exampleDF <- inner_join(table_A, table_B, by="customer_ID")
inner_exampleDF
left_exampleDF <- left_join(table_A, table_B, by="customer_ID")
left_exampleDF
right_exampleDF <- right_join(table_A, table_B, by="customer_ID")
right_exampleDF
full_exampleDF <- full_join(table_A, table_B, by="customer_ID")
full_exampleDF
semi_exampleDF <- semi_join(table_A, table_B, by="customer_ID")
semi_exampleDF
anti_exampleDF <- anti_join(table_A, table_B, by="customer_ID")
anti_exampleDF
spiders_locs <- read_csv("data/spiders locations/spiders_locations.csv")
spiders_locs
spider_join <- full_join(spiders_all, spiders_locs, by="Accession")
spider_join
spiders_with_locs <-
full_join(spiders_all, spiders_locs, by="Accession")
spiders_with_locs
class(spiders_with_locs$Date)
day <- today()
day
str(day)
datetime <- now()
datetime
dmy(spiders_with_locs$Date)
as.Date(spiders_with_locs$Date, format = "%d/%m/%y")
dateformat1 <- "20200922"
dateformat2 <- "09-22-2020"
dateformat3 <- "22/09/2020"
dateformat4 <- "09-22-2020 17:00:00"
dateformat5 <- "20200922 170000"
lubridate::dateformat1
dateformat1 lubridate::
dateformat1(lubridate)
dateformat1 <- "20200922"
dateformat2 <- "09-22-2020"
dateformat3 <- "22/09/2020"
dateformat4 <- "09-22-2020 17:00:00"
dateformat5 <- "20200922 170000"
lubridate::mdy(dateformat1)
ymd(dateformat1)
ymd(dateformat1)
mdy(dateformat2)
dmy(dateformat3)
mdy_hms(dateformat4)
ymd_h(dateformat5)
ymd(dateformat1)
mdy(dateformat2)
dmy(dateformat3)
mdy_hms(dateformat4)
ymd_m(dateformat5)
ymd(dateformat1)
mdy(dateformat2)
dmy(dateformat3)
mdy_hms(dateformat4)
ymd_h(dateformat5)
ymd(dateformat1)
mdy(dateformat2)
dmy(dateformat3)
mdy_hms(dateformat4)
ymd_hm(dateformat5)
ymd(dateformat1)
mdy(dateformat2)
dmy(dateformat3)
mdy_hms(dateformat4)
ymd_hms(dateformat5)
year(datetime)
month(datetime)
day(datetime)
hour(datetime)
minute(datetime)
second(datetime)
wday(datetime, label=T)
write.csv(spiders_with_locs, file = "spiders_with_locs.csv", row.names = FALSE)
install.packages("devtools")
library(devtools)
devtools::install_github("dkahle/ggmap")
install.packages("remotes")
remotes::install_github("hrbrmstr/albersusa")
knitr::opts_chunk$set(
collapse = TRUE,
comment = "#>"
)
install.packages("remotes")
remotes::install_github("hrbrmstr/albersusa")
yes
knitr::opts_chunk$set(
collapse = TRUE,
comment = "#>"
)
install.packages("remotes")
remotes::install_github("hrbrmstr/albersusa")
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(RColorBrewer)
library(paletteer)
library(janitor)
library(here)
library(naniar)
getwd()
indian_food <- read_csv(here("Project", "Data", "indian_food.csv")) %>% janitor::clean_names()
indian_food
indian_food<-indian_food%>%
na_if("-1")
naniar::miss_var_summary(indian_food)
indian_food<-indian_food%>%
mutate_all(tolower)%>%
transform(ingredients=str_split(ingredients,","))%>%
unnest(ingredients)
indian_food
indian_food<-indian_food%>%
mutate(total_cook_time=as.numeric(cook_time)+as.numeric(prep_time))
indian_food
flavor_diet <- indian_food %>%
filter(!is.na(flavor_profile)) %>%
ggplot(aes(x=flavor_profile, fill=diet))+
geom_bar(na.rm=T, position="dodge",alpha=0.75, color="black") +
labs(title = "Flavor in Relationship to Diet",
x = "Flavor Profile",
y = "Count") +
theme(plot.title = element_text(size = rel(1.5), hjust = 0.5))
flavor_diet
flavor_diet2 <- indian_food %>%
filter(!is.na(flavor_profile)) %>%
ggplot(aes(x=diet, fill=flavor_profile))+
geom_bar(na.rm=T, position="dodge",alpha=0.75, color="black") +
labs(title = "Flavor in Relationship to Diet",
x = "Diet",
y = "Count") +
theme(plot.title = element_text(size = rel(1.5), hjust = 0.5))
flavor_diet2
flavor_state <- indian_food %>%
filter(!is.na(flavor_profile)) %>%
ggplot(aes(x=flavor_profile, fill=state))+
geom_bar(na.rm=T, position="dodge",alpha=0.75, color="black") +
labs(title = "Flavor in Relationship to State",
x = "Flavor Profile",
y = "Count") +
theme(plot.title = element_text(size = rel(1.0), hjust = 0.5))
flavor_state
flavor_state <- indian_food %>%
filter(!is.na(flavor_profile, state)) %>%
ggplot(aes(x=flavor_profile, fill=state))+
geom_bar(na.rm=T, position="dodge",alpha=0.75, color="black") +
labs(title = "Flavor in Relationship to State",
x = "Flavor Profile",
y = "Count") +
theme(plot.title = element_text(size = rel(1.0), hjust = 0.5))
flavor_state <- indian_food %>%
filter(!is.na(flavor_profile)) %>%
filter(!is.na(state)) %>%
ggplot(aes(x=flavor_profile, fill=state))+
geom_bar(na.rm=T, position="dodge",alpha=0.75, color="black") +
labs(title = "Flavor in Relationship to State",
x = "Flavor Profile",
y = "Count") +
theme(plot.title = element_text(size = rel(1.0), hjust = 0.5))
flavor_state
flavor_state2 <- indian_food %>%
filter(!is.na(flavor_profile)) %>%
filter(!is.na(state)) %>%
ggplot(aes(x=state, fill=flavor_profile))+
geom_bar(na.rm=T, position="dodge",alpha=0.75, color="black") +
labs(title = "Flavor in Relationship to State",
x = "State",
y = "Count") +
theme(plot.title = element_text(size = rel(1.0), hjust = 0.5))+
theme(axis.text.x = element_text(angle = 60, hjust = 1))
flavor_state2
flavor_region <- indian_food %>%
filter(!is.na(flavor_profile)) %>%
filter(!is.na(region)) %>%
ggplot(aes(x=flavor_profile, fill=region))+
geom_bar(na.rm=T, position="dodge",alpha=0.75, color="black") +
labs(title = "Flavor in Relationship to Region",
x = "Flavor Profile",
y = "Count") +
theme(plot.title = element_text(size = rel(1.0), hjust = 0.5))
flavor_region
flavor_region2 <- indian_food %>%
filter(!is.na(flavor_profile)) %>%
filter(!is.na(region)) %>%
ggplot(aes(x=region, fill=flavor_profile))+
geom_bar(na.rm=T, position="dodge",alpha=0.75, color="black") +
labs(title = "Flavor in Relationship to Region",
x = "Region",
y = "Count") +
theme(plot.title = element_text(size = rel(1.0), hjust = 0.5))
flavor_region2
install.packages("devtools")
library(devtools)
devtools::install_github("dkahle/ggmap")
install.packages("devtools")
install.packages("devtools")
install.packages("remotes")
remotes::install_github("hrbrmstr/albersusa")
library(tidyverse)
library(here)
library(janitor)
library(ggmap)
spiders <- read_csv(here("lab12", "data", "spiders_with_locs.csv")) %>% clean_names()
spiders <- spiders %>% filter(latitude<=42)
spiders <- read_csv(here("lab12", "data", "spiders_with_locs.csv")) %>% clean_names()
spiders
spiders <- spiders %>% filter(latitude<=42)
spiders
spiders %>%
select(latitude, longitude) %>%
summary()
lat <- c(34.67, 41.80)
long <- c(-124.1, -115.5)
bbox <- make_bbox(long, lat, f = 0.05)
lat <- c(34.67, 41.80)
long <- c(-124.1, -115.5)
bbox <- make_bbox(long, lat, f = 0.05)
lat <- c(34.67, 41.80)
long <- c(-124.1, -115.5)
bbox <- make_bbox(long, lat, f = 0.05)
map1 <- get_map(bbox, maptype = "terrain", source = "stamen")
ggmap(map1)
ggmap(map1) +
geom_point(data = spiders, aes(longitude, latitude)) +
labs(x = "Longitude", y = "Latitude", title = "Spider Locations")
map2 <- get_map(bbox, maptype = "toner", source = "stamen")
ggmap(map1) +
geom_point(data = spiders, aes(longitude, latitude)) +
labs(x = "Longitude", y = "Latitude", title = "Spider Locations")
ggmap(map2) +
geom_point(data = spiders, aes(longitude, latitude)) +
labs(x = "Longitude", y = "Latitude", title = "Spider Locations")
ggmap(map2) +
geom_point(data = spiders, aes(longitude, latitude)) +
labs(x = "Longitude", y = "Latitude", title = "Spider Locations") +
theme(points(red))
ggmap(map2) +
geom_point(data = spiders, aes(longitude, latitude)) +
labs(x = "Longitude", y = "Latitude", title = "Spider Locations")
map2 <- get_map(bbox, maptype = "watercolor", source = "stamen")
ggmap(map2) +
geom_point(data = spiders, aes(longitude, latitude)) +
labs(x = "Longitude", y = "Latitude", title = "Spider Locations")
library(albersusa)
install.packages("remotes")
remotes::install_github("hrbrmstr/albersusa")
library(albersusa)
install.packages("remotes")
remotes::install_github("hrbrmstr/albersusa")
library(albersusa)
install.packages("albersusa")
library(albersusa)
install.packages("albersusa", dependencies = FALSE)
library(albersusa)
install.packages("remotes")
remotes::install_github("hrbrmstr/albersusa")
install.packages("devtools")
library(devtools)
devtools::install_github("dkahle/ggmap")
install.packages("devtools")
install.packages("remotes")
remotes::install_github("hrbrmstr/albersusa")
library(albersusa)
#install.packages("remotes")
remotes::install_github("hrbrmstr/albersusa")
library(albersusa)
us_comp <- usa_sf() # get a composite map of the USA
cnty_comp <- counties_sf() # get a composite map of USA counties
ggplot() +
geom_sf(data = us_comp, size = 0.125) +
theme_linedraw()+
labs(title = "USA State Boundaries")
library(tidyverse)
library(here)
library(janitor)
library(ggmap)
ggplot() +
geom_sf(data = us_comp, size = 0.125) +
theme_linedraw()+
labs(title = "USA State Boundaries")
ca_comp <- us_comp %>%
filter(name=="California")
ca_cnty_comp <- cnty_comp %>%
filter(state=="California")
ggplot() +
geom_sf(data = us_comp, size = 0.125) +
theme_linedraw()+
labs(title = "USA State Boundaries")
ca_comp <- us_comp %>%
filter(name=="California")
ggplot() +
geom_sf(data = ca_comp, size = 0.125)+
geom_sf(data = ca_cnty_comp, size = 0.125)
ggplot() +
geom_sf(data = ca_comp, size = 0.125)+
geom_sf(data = ca_cnty_comp, size = 0.125)+
geom_point(data = spiders, aes(longitude, latitude))
ggplot() +
geom_sf(data = ca_comp, size = 0.125)+
geom_sf(data = ca_cnty_comp, size = 0.125)+
geom_point(data = spiders, aes(longitude, latitude), size=0.8)+
labs(x = "Figure 1: Distribution of Usofila spiders")+
theme_minimal() +
theme(axis.text = element_blank()) +
theme(axis.title.x = element_text(hjust=0.5, size = 10)) +
theme(axis.title.y = element_blank()) +
theme(panel.grid = element_blank()) +
theme(legend.position = c(0.9, 0.3)) -> uso_map
uso_map
ca_comp <- us_comp %>%
filter(name=="California")
library(tidyverse)
library(here)
library(janitor)
library(ggmap)
ca_comp <- us_comp %>%
filter(name=="California")
ca_cnty_comp <- cnty_comp %>%
filter(state=="California")
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(RColorBrewer)
library(paletteer)
library(janitor)
library(here)
library(naniar)
library(gapminder)
getwd()
indian_food<- read_csv(here("indian_food_data.csv"))%>% clean_names()
getwd()
indian_food<-indian_food%>%
na_if("-1")
naniar::miss_var_summary(indian_food)
spiders2 <- spiders %>%
mutate(locality_cave = if_else(str_detect(locality, "Cave"), "troglo", "epig"))
spiders2
str(spiders2)
spiders2$locality_cave<-as.factor(spiders2$locality_cave)
str(spiders2)
spiders2 %>% ggplot() +
geom_sf(data = ca_comp, size = 0.125)+
geom_sf(data = ca_cnty_comp, size = 0.125)+
geom_point(aes(x = longitude, y = latitude, color = locality_cave, shape = locality_cave))+
labs(x = "Figure 1: Distribution of Usofila spiders")+
theme_minimal() +
theme(axis.text = element_blank()) +
theme(axis.title.x = element_text(hjust=0.5, size = 10)) +
theme(axis.title.y = element_blank()) +
theme(panel.grid = element_blank()) +
theme(legend.position = c(1.2, 0.3))
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(janitor)
library(here)
library(ggmap)
library(albersusa)
grizzly <- read_csv(here("lab12", "data", "bear-sightings.csv"))
grizzly
grizzly %>%
select(latitude, longitude) %>%
summary()
lat <- c(55.02, 70.37)
long <- c(-166.2, -131.3)
bbox <- make_bbox(long, lat, f = 0.05)
map_grizzly <- get_map(bbox, maptype = "terrain", source = "stamen")
ggmap(map_grizzly)
ggmap(map_grizzly) +
geom_point(data = grizzly, aes(longitude, latitude)) +
labs(x = "Longitude", y = "Latitude", title = "Grizzly Bears in Alaska")
wolves <- read_csv(here("lab12", "data", "wolves_data", "wolves_dataset.csv"))
wolves
str(wolves)
wolves$pop <- as.factor(wolves$pop)
levels(wolves$pop)
str(wolves)
summary(wolves)
lower_wolves <- wolves %>%
filter(lat <= 49)
str(lower_wolves)
summary(lower_wolves)
us_comp <- usa_sf()
lower_comp <- us_comp %>%
filter(name!="Alaska" & name!="Hawaii")
cnty_comp <- counties_sf()
lower_cnty_comp <- cnty_comp %>%
filter(state!="Alaska" & state!="Hawaii")
ggplot() +
geom_sf(data = lower_comp, size = 0.125)+
geom_sf(data = lower_cnty_comp, size = 0.125)
lower_wolves %>%
ggplot() +
geom_sf(data = lower_comp, size = 0.125)+
geom_sf(data = lower_cnty_comp, size = 0.125)+
geom_point(aes(x = long, y = lat, color=pop),size = 4, alpha = 0.8)
lower_wolves %>%
group_by(pop) %>%
summarise(mean_pack.size = mean(pack.size))
lower_wolves %>%
ggplot() +
geom_sf(data = lower_comp, size = 0.125)+
geom_sf(data = lower_cnty_comp, size = 0.125)+
geom_point(aes(x = long, y = lat, color=pop, size = pack.size), alpha = 0.5)
lower_wolves %>%
ggplot() +
geom_sf(data = lower_comp, size = 0.125)+
geom_sf(data = lower_cnty_comp, size = 0.125)+
geom_point(aes(x = long, y = lat, color=pop),size = 4, alpha = 0.5)
wolves$pop <- as.factor(wolves$pop)
wolves %>% summarise(n_wolves_pop = n_distinct(pop))
lower_wolves <- wolves %>%
filter(lat <= 49)
arrange(desc(lat))
lower_wolves <- wolves %>%
filter(lat <= 49)  %>%
arrange(desc(lat))
lower_wolves
lower_wolves %>%
ggplot() +
geom_sf(data = lower_comp, size = 0.5)+
geom_sf(data = lower_cnty_comp, size = 0.5)+
labs(title = "Wolf Distribution (In Lower 48 States)", x = "Longitude", y =     "Latitude") +
geom_point(aes(x = long, y = lat, color=pop),size = 4, alpha = 0.5)
lower_wolves %>%
ggplot() +
geom_sf(data = lower_comp, size = 0.125)+
geom_sf(data = lower_cnty_comp, size = 0.125)+
labs(title = "Wolf Distribution (In Lower 48 States)", x = "Longitude", y =     "Latitude") +
geom_point(aes(x = long, y = lat, color=pop),size = 4, alpha = 0.5)
lower_wolves %>%
ggplot() +
geom_sf(data = lower_comp, size = 0.125)+
geom_sf(data = lower_cnty_comp, size = 0.125)+
labs(title = "Wolf Distribution (In Lower 48 States)", x = "Longitude", y ="Latitude") +
geom_point(aes(x = long, y = lat, color=pop, size = pack.size), alpha = 0.5)
flavor_diet <- indian_food %>%
filter(!is.na(flavor_profile)) %>%
ggplot(aes(x=diet, fill=flavor_profile))+
geom_bar(na.rm=T, position="dodge",alpha=0.75, color="black") +
labs(title = "Flavor in Relationship to Diet",
x = "Diet",
y = "Count") +
theme(plot.title = element_text(size = rel(1.5), hjust = 0.5))
flavor_diet
flavor_state <- indian_food %>%
filter(!is.na(flavor_profile)) %>%
filter(!is.na(state)) %>%
ggplot(aes(x=state, fill=flavor_profile))+
geom_bar(na.rm=T, position="dodge",alpha=0.75, color="black") +
labs(title = "Flavor in Relationship to State",
x = "State",
y = "Count") +
theme(plot.title = element_text(size = rel(1.0), hjust = 0.5))+
theme(axis.text.x = element_text(angle = 60, hjust = 1))
flavor_state
flavor_region <- indian_food %>%
filter(!is.na(flavor_profile)) %>%
filter(!is.na(region)) %>%
ggplot(aes(x=region, fill=flavor_profile))+
geom_bar(na.rm=T, position="dodge",alpha=0.75, color="black") +
labs(title = "Flavor in Relationship to Region",
x = "Region",
y = "Count") +
theme(plot.title = element_text(size = rel(1.0), hjust = 0.5))
flavor_region
